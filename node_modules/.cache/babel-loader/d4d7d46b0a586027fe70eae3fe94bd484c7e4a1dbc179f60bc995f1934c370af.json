{"ast":null,"code":"var _jsxFileName = \"/Users/bijoyanil/Documents/Projects/Countdown/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Countdown = () => {\n  _s();\n  const [totalSeconds, setTotalSeconds] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const hours = Math.floor(totalSeconds / 3600);\n  const minutes = Math.floor(totalSeconds % 3600 / 60);\n  const seconds = totalSeconds % 60;\n  useEffect(() => {\n    let interval;\n    if (isPlaying && totalSeconds > 0) {\n      interval = setInterval(() => {\n        setTotalSeconds(prevSeconds => prevSeconds > 0 ? prevSeconds - 1 : 0);\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isPlaying, totalSeconds]);\n  const handleTogglePlayPause = () => {\n    if (totalSeconds > 0) {\n      setIsPlaying(prevIsPlaying => !prevIsPlaying);\n    }\n  };\n  const handleMinutesChange = event => {\n    const newMinutes = parseInt(event.target.value, 10);\n    if (!isNaN(newMinutes)) {\n      setTotalSeconds(newMinutes * 60);\n    } else if (event.target.value === \"\") {\n      setTotalSeconds(0);\n    } else {\n      // Handle non-numeric input, you can set an error state or display a message\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Minutes: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: Math.floor(totalSeconds / 60),\n        onChange: handleMinutesChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [String(hours).padStart(2, '0'), \":\", String(minutes).padStart(2, '0'), \":\", String(seconds).padStart(2, '0')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTogglePlayPause,\n      children: isPlaying ? 'Pause' : 'Play'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Countdown, \"0Q1vYETTC0ncUBYiVgJpQkHxHQw=\");\n_c = Countdown;\nexport default Countdown;\nvar _c;\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Countdown","_s","totalSeconds","setTotalSeconds","isPlaying","setIsPlaying","hours","Math","floor","minutes","seconds","interval","setInterval","prevSeconds","clearInterval","handleTogglePlayPause","prevIsPlaying","handleMinutesChange","event","newMinutes","parseInt","target","value","isNaN","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","String","padStart","onClick","_c","$RefreshReg$"],"sources":["/Users/bijoyanil/Documents/Projects/Countdown/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Countdown = () => {\n  const [totalSeconds, setTotalSeconds] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  const hours = Math.floor(totalSeconds / 3600);\n  const minutes = Math.floor((totalSeconds % 3600) / 60);\n  const seconds = totalSeconds % 60;\n\n  useEffect(() => {\n    let interval;\n\n    if (isPlaying && totalSeconds > 0) {\n      interval = setInterval(() => {\n        setTotalSeconds((prevSeconds) => (prevSeconds > 0 ? prevSeconds - 1 : 0));\n      }, 1000);\n    }\n\n    return () => clearInterval(interval);\n  }, [isPlaying, totalSeconds]);\n\n  const handleTogglePlayPause = () => {\n    if (totalSeconds > 0) {\n      setIsPlaying((prevIsPlaying) => !prevIsPlaying);\n    }\n  };\n\n  const handleMinutesChange = (event) => {\n    const newMinutes = parseInt(event.target.value, 10);\n\n    if (!isNaN(newMinutes)) {\n      setTotalSeconds(newMinutes * 60);\n    } else if (event.target.value === \"\") {\n      setTotalSeconds(0);\n    } else {\n      // Handle non-numeric input, you can set an error state or display a message\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <label>Minutes: </label>\n        <input\n          type=\"number\"\n          value={Math.floor(totalSeconds / 60)}\n          onChange={handleMinutesChange}\n          \n        />\n      </div>\n      <div>\n        <p>\n          {String(hours).padStart(2, '0')}:{String(minutes).padStart(2, '0')}:{String(seconds).padStart(2, '0')}\n        </p>\n      </div>\n      <button onClick={handleTogglePlayPause}>\n        {isPlaying ? 'Pause' : 'Play'}\n      </button>\n    </div>\n  );\n};\n\nexport default Countdown;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}